<?php

/**
 * @file
 * Install, update and uninstall functions for the openculturas_section module.
 */

declare(strict_types=1);

use Drupal\Core\Field\FieldConfigInterface;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_install().
 */
function openculturas_section_install(bool $is_syncing): void {
  if ($is_syncing) {
    return;
  }

  $bundles = [
    'article' => 'group_tags_wrapper',
    'event' => 'group_event_tab_advanced',
    'location' => 'group_location_tab_advanced',
    'profile' => 'group_profile_tab_advanced',
  ];
  /** @var \Drupal\Core\Entity\EntityDisplayRepositoryInterface $entityDisplayRepository */
  $entityDisplayRepository = \Drupal::service('entity_display.repository');
  foreach ($bundles as $bundle => $field_group_id) {
    $formDisplay = $entityDisplayRepository->getFormDisplay('node', $bundle);
    $field_group = $formDisplay->getThirdPartySetting('field_group', $field_group_id);
    if (is_array($field_group) && $field_group['region'] === 'content') {
      $formDisplay->setComponent('field_section', [
        'type' => 'options_buttons',
      ]);
      $field_group['children'][] = 'field_section';
      $field_group['children'] = array_values(array_unique($field_group['children']));
      $formDisplay->setThirdPartySetting('field_group', $field_group_id, $field_group);
      $weight = 0;
      foreach ($field_group['children'] as $child_id) {
        if (!is_string($child_id)) {
          continue;
        }

        if ($componentOptions = $formDisplay->getComponent($child_id)) {
          $componentOptions['weight'] = ++$weight;
          $formDisplay->setComponent($child_id, $componentOptions);
        }
      }

      $formDisplay->save();
    }

    $formDisplay = $entityDisplayRepository->getFormDisplay('node', $bundle, 'bulk_edit');
    $formDisplay->setComponent('field_section', [
      'type' => 'options_buttons',
    ]);
    $formDisplay->save();

  }

  /** @var \Drupal\Core\Field\FieldConfigInterface|null $field */
  $field = FieldConfig::loadByName('paragraph', 'teaser_term', 'field_term');
  if ($field instanceof FieldConfigInterface) {
    $handler_settings = is_array($field->getSetting('handler_settings')) ? $field->getSetting('handler_settings') : [];
    if ($handler_settings !== [] && array_key_exists('target_bundles', $handler_settings)) {
      $handler_settings['target_bundles']['oc_section'] = 'oc_section';
      asort($handler_settings['target_bundles']);
      $field->setSetting('handler_settings', $handler_settings);
      $field->save();
    }
  }
}
