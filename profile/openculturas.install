<?php

/**
 * @file
 * Install, update and uninstall functions for the openculturas installation profile.
 */

declare(strict_types=1);

use Drupal\node\NodeInterface;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install_tasks().
 */
function openculturas_install_tasks(): array {
  return [
    'openculturas_install_role_missing_permission' => [
      'display_name' => t('Install missing permissions'),
      'type' => 'normal',
    ],
    'openculturas_install_task_role_administrator' => [
      'display_name' => t('Assign user 1 the "administrator" role.'),
      'type' => 'normal',
    ],
    'openculturas_install_openculturas_modules' => [
      'display_name' => t('Install OpenCulturas modules.'),
      'type' => 'normal',
    ],
    'openculturas_install_content' => [
      'display_name' => t('Install default content'),
      'type' => 'normal',
    ],
  ];
}

/**
 * Callback function to install manually the permissions.
 *
 * This is necessary because of a circular dependency between the 'xyz' role
 * and the 'assign xyz role' permission.
 *
 * @see https://www.drupal.org/project/role_delegation/issues/3354012
 * @see openculturas_install_tasks()
 */
function openculturas_install_role_missing_permission(): void {
  /** @var \Drupal\user\RoleStorageInterface $roleStorage */
  $roleStorage = \Drupal::entityTypeManager()->getStorage('user_role');
  /** @var \Drupal\user\RoleInterface|null $role */
  $role = $roleStorage->load('oc_admin');
  if ($role instanceof RoleInterface) {
    $role->grantPermission('assign magazine_editor role');
    $role->grantPermission('assign oc_admin role');
    $role->grantPermission('assign oc_member role');
    $role->grantPermission('assign oc_organizer role');
    $role->save();
  }
}

/**
 * Callback function to assign user 1 the "administrator" role.
 *
 * @todo Remove this when we require core 10.3:
 *       https://www.drupal.org/node/3443437.
 */
function openculturas_install_task_role_administrator(): void {
  /** @var \Drupal\user\UserInterface $user */
  $user = User::load(1);
  $user->addRole('administrator');
  $user->save();
}

/**
 * Callback function to install default profile content.
 *
 * @see openculturas_install_tasks()
 */
function openculturas_install_content(): void {
  $configFactory = \Drupal::configFactory();

  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');
  // We only want to import the content,
  // then we do not need the module anymore.
  $module_installer->install(['openculturas_content']);
  $module_installer->uninstall(['default_content', 'openculturas_content']);

  $config = $configFactory->getEditable('system.site');

  // Do not set anything, when installed with existing config.
  if ($config->get('uuid') === '4e1801fb-85a2-40f3-8ad4-11f952d5e819') {
    return;
  }

  /** @var \Drupal\Core\Entity\EntityRepositoryInterface $entityRepository */
  $entityRepository = \Drupal::service('entity.repository');

  /** @var \Drupal\node\NodeInterface|null $node */
  $node = $entityRepository->loadEntityByUuid('node', 'f971a5cd-960b-40ee-b059-173c366231af');
  // File: profile/modules/custom/openculturas_content/content/node/f971a5cd-960b-40ee-b059-173c366231af.yml.
  if ($node instanceof NodeInterface) {
    $config->set('page.404', '/node/' . $node->id());
  }

  /** @var \Drupal\node\NodeInterface|null $node */
  $node = $entityRepository->loadEntityByUuid('node', '34e5758c-997b-45cd-91ed-66a694a5fdd3');
  // File: profile/modules/custom/openculturas_content/content/node/34e5758c-997b-45cd-91ed-66a694a5fdd3.yml.
  if ($node instanceof NodeInterface) {
    $config->set('page.403', '/node/' . $node->id());
  }

  /** @var \Drupal\node\NodeInterface|null $node */
  $node = $entityRepository->loadEntityByUuid('node', '9af42cc9-30a8-46a4-9432-dfcde34cd259');
  // File: profile/modules/custom/openculturas_content/content/node/9af42cc9-30a8-46a4-9432-dfcde34cd259.yml.
  if ($node instanceof NodeInterface) {
    $config->set('page.front', '/node/' . $node->id());
  }

  $config->save();

  // Fix path to marker, when installed as a dependency.
  if (file_exists(DRUPAL_ROOT . '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/images/map_marker.svg')) {
    $config = $configFactory->getEditable('views.view.locations');
    $config->set('display.default.display_options.style.options.icon.iconUrl', '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/images/map_marker.svg');
    $config->save();

    $config = $configFactory->getEditable('views.view.related_date');
    $config->set('display.upcoming_dates_map.display_options.style.options.icon.iconUrl', '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/images/map_marker.svg');
    $config->save();

    $config = $configFactory->getEditable('core.entity_view_display.paragraph.address_data.default');
    $config->set('content.field_address_location.settings.icon.iconUrl', '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/images/map_marker.svg');
    $config->save();

    $config = $configFactory->getEditable('core.entity_view_display.paragraph.address_data.map');
    $config->set('content.field_address_location.settings.icon.iconUrl', '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/images/map_marker.svg');
    $config->save();
  }

  if (file_exists(DRUPAL_ROOT . '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/favicons/drupal-oc-icon.png')) {
    $config = $configFactory->getEditable('gin.settings');
    $config->set('favicon.path', '/profiles/contrib/openculturas-distribution/profile/themes/openculturas_base/favicons/drupal-oc-icon.png');
    $config->save();
  }
}

/**
 * Callback function to install OpenCulturas modules.
 *
 * The modules need configurations of the OpenCulturas profile, therefore
 * we install them after the profile was installed.
 */
function openculturas_install_openculturas_modules(): void {
  /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
  $module_installer = \Drupal::service('module_installer');
  $module_installer->install(['openculturas_map']);
}

/**
 * Implements hook_update_last_removed().
 */
function openculturas_update_last_removed(): int {
  return 10108;
}

/**
 * Deletes removed update_helper_checklist updates.
 */
function openculturas_update_10109(): void {
  $storage = \Drupal::entityTypeManager()->getStorage('update_helper_checklist_update');

  $checklist_items = [
    'openculturas:openculturas_update_9402',
    'openculturas:openculturas_update_9403',
    'openculturas:openculturas_update_9404',
    'openculturas:openculturas_post_update_0045',
    'openculturas:openculturas_post_update_interaction_button_section',
    'openculturas:openculturas_post_update_password_policy',
    'openculturas:openculturas_post_update_related_content_via_term_node_tid_depth',
    'openculturas:openculturas_post_update_add_field_badges',
  ];

  $entities = $storage->loadMultiple($checklist_items);
  $storage->delete($entities);
  /** @var \Drupal\checklistapi\Storage\StateStorage $checklistapi_storage */
  $checklistapi_storage = \Drupal::service('checklistapi_storage.state');
  $checklistapi_storage->setChecklistId('update_helper_checklist')->deleteSavedProgress();

}
